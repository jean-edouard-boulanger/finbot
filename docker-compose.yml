services:
  finbotdb:
    image: "postgres:12"
    env_file: &env_files
      - path: envs/dev.env
        required: false
      - path: envs/secrets.dev.env
        required: false
      - path: envs/dev-overrides.env
        required: false
    shm_size: 256MB
    ports:
      - "15432:5432"
    volumes:
      - .finbotdb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  finbotdb-test:
    image: "postgres:12"
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_DB: finbot
      POSTGRES_USER: finbot
      POSTGRES_PASSWORD: finbot
    shm_size: 256MB
    ports:
      - "15433:5432"

  workersrv_temporal:
    image: "finbotapp/runtime-dev:latest"
    env_file: *env_files
    depends_on:
      - finbotdb
      - temporal
    working_dir: /finbot
    command: bash -c "tools/autorestart finbot/ tools/run workersrv[temporal]"
    tty: true
    volumes:
      - .:/finbot
    environment:
      FINBOT_WAIT_DEPS: "${FINBOT_WAIT_DEPS:-finbotdb,temporal}"

  appwsrv:
    image: "finbotapp/runtime-dev:latest"
    env_file: *env_files
    depends_on:
      - finbotdb
      - workersrv_temporal
    working_dir: /finbot
    command: bash -c "./tools/run appwsrv"
    tty: true
    ports:
      - "5003:5003"
    volumes:
      - .:/finbot
    environment:
      FINBOT_WAIT_DEPS: "${FINBOT_WAIT_DEPS:-finbotdb,workersrv[temporal]}"

  operator:
    image: "finbotapp/runtime-dev:latest"
    env_file: *env_files
    container_name: operator
    depends_on:
      - finbotdb
    working_dir: /finbot
    command: sleep infinity
    stdin_open: true
    tty: true
    volumes:
      - .:/finbot

  webapp:
    image: "node:iron-bullseye"
    env_file: *env_files
    profiles:
      - webapp
    depends_on:
      - appwsrv
    volumes:
      - .:/finbot
    working_dir: /finbot
    command: bash -c "tools/run webapp"
    tty: true
    ports:
      - "5005:5005"

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      - '5000:80'
    profiles:
      - smtp4dev

  temporal:
    image: temporalio/auto-setup:1.27
    env_file: *env_files
    container_name: temporal
    depends_on:
      finbotdb:
        condition: service_healthy
    ports:
      - 7233:7233
    volumes:
      - ./envs/temporal/dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    image: temporalio/admin-tools:1.27
    env_file: *env_files
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    stdin_open: true
    tty: true

  temporal-ui:
    image: temporalio/ui:v2.37.4
    env_file: *env_files
    container_name: temporal-ui
    depends_on:
      - temporal
    ports:
      - 5006:8080
