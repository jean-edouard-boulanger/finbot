/* tslint:disable */
/* eslint-disable */
/**
 * Finbot application service
 * API documentation for appwsrv
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
  GetEarningsReportResponse,
  GetHoldingsReportResponse,
} from "../models/index";
import {
  GetEarningsReportResponseFromJSON,
  GetEarningsReportResponseToJSON,
  GetHoldingsReportResponseFromJSON,
  GetHoldingsReportResponseToJSON,
} from "../models/index";

/**
 * UserAccountsReportsApi - interface
 *
 * @export
 * @interface UserAccountsReportsApiInterface
 */
export interface UserAccountsReportsApiInterface {
  /**
   * Get earnings report
   * @summary Get Earnings Report
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof UserAccountsReportsApiInterface
   */
  getUserAccountEarningsReportRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetEarningsReportResponse>>;

  /**
   * Get earnings report
   * Get Earnings Report
   */
  getUserAccountEarningsReport(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetEarningsReportResponse>;

  /**
   * Get holdings report
   * @summary Get Holdings Report
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof UserAccountsReportsApiInterface
   */
  getUserAccountHoldingsReportRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetHoldingsReportResponse>>;

  /**
   * Get holdings report
   * Get Holdings Report
   */
  getUserAccountHoldingsReport(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetHoldingsReportResponse>;
}

/**
 *
 */
export class UserAccountsReportsApi
  extends runtime.BaseAPI
  implements UserAccountsReportsApiInterface
{
  /**
   * Get earnings report
   * Get Earnings Report
   */
  async getUserAccountEarningsReportRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetEarningsReportResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token("HTTPBearer", []);

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/reports/earnings/`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      GetEarningsReportResponseFromJSON(jsonValue),
    );
  }

  /**
   * Get earnings report
   * Get Earnings Report
   */
  async getUserAccountEarningsReport(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetEarningsReportResponse> {
    const response = await this.getUserAccountEarningsReportRaw(initOverrides);
    return await response.value();
  }

  /**
   * Get holdings report
   * Get Holdings Report
   */
  async getUserAccountHoldingsReportRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetHoldingsReportResponse>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token("HTTPBearer", []);

      if (tokenString) {
        headerParameters["Authorization"] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/reports/holdings/`,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      GetHoldingsReportResponseFromJSON(jsonValue),
    );
  }

  /**
   * Get holdings report
   * Get Holdings Report
   */
  async getUserAccountHoldingsReport(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetHoldingsReportResponse> {
    const response = await this.getUserAccountHoldingsReportRaw(initOverrides);
    return await response.value();
  }
}
