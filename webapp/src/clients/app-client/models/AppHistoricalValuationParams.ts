/* tslint:disable */
/* eslint-disable */
/**
 * Finbot application service
 * API documentation for appwsrv
 *
 * The version of the OpenAPI document: v0.0.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { ValuationFrequency } from "./ValuationFrequency";
import {
  ValuationFrequencyFromJSON,
  ValuationFrequencyFromJSONTyped,
  ValuationFrequencyToJSON,
} from "./ValuationFrequency";

/**
 *
 * @export
 * @interface AppHistoricalValuationParams
 */
export interface AppHistoricalValuationParams {
  /**
   *
   * @type {Date}
   * @memberof AppHistoricalValuationParams
   */
  fromTime?: Date;
  /**
   *
   * @type {Date}
   * @memberof AppHistoricalValuationParams
   */
  toTime?: Date;
  /**
   *
   * @type {ValuationFrequency}
   * @memberof AppHistoricalValuationParams
   */
  frequency?: ValuationFrequency;
}

/**
 * Check if a given object implements the AppHistoricalValuationParams interface.
 */
export function instanceOfAppHistoricalValuationParams(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function AppHistoricalValuationParamsFromJSON(
  json: any,
): AppHistoricalValuationParams {
  return AppHistoricalValuationParamsFromJSONTyped(json, false);
}

export function AppHistoricalValuationParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AppHistoricalValuationParams {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    fromTime: !exists(json, "from_time")
      ? undefined
      : new Date(json["from_time"]),
    toTime: !exists(json, "to_time") ? undefined : new Date(json["to_time"]),
    frequency: !exists(json, "frequency")
      ? undefined
      : ValuationFrequencyFromJSON(json["frequency"]),
  };
}

export function AppHistoricalValuationParamsToJSON(
  value?: AppHistoricalValuationParams | null,
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    from_time:
      value.fromTime === undefined ? undefined : value.fromTime.toISOString(),
    to_time:
      value.toTime === undefined ? undefined : value.toTime.toISOString(),
    frequency: ValuationFrequencyToJSON(value.frequency),
  };
}
