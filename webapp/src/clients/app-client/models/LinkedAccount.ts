/* tslint:disable */
/* eslint-disable */
/**
 * Finbot application service
 * API documentation for appwsrv
 *
 * The version of the OpenAPI document: v0.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { LinkedAccountStatus } from "./LinkedAccountStatus";
import {
  LinkedAccountStatusFromJSON,
  LinkedAccountStatusFromJSONTyped,
  LinkedAccountStatusToJSON,
} from "./LinkedAccountStatus";
import type { Provider } from "./Provider";
import {
  ProviderFromJSON,
  ProviderFromJSONTyped,
  ProviderToJSON,
} from "./Provider";

/**
 *
 * @export
 * @interface LinkedAccount
 */
export interface LinkedAccount {
  /**
   *
   * @type {number}
   * @memberof LinkedAccount
   */
  id: number;
  /**
   *
   * @type {number}
   * @memberof LinkedAccount
   */
  userAccountId: number;
  /**
   *
   * @type {string}
   * @memberof LinkedAccount
   */
  accountName: string;
  /**
   *
   * @type {string}
   * @memberof LinkedAccount
   */
  accountColour: string;
  /**
   *
   * @type {boolean}
   * @memberof LinkedAccount
   */
  deleted: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LinkedAccount
   */
  frozen: boolean;
  /**
   *
   * @type {string}
   * @memberof LinkedAccount
   */
  providerId: string;
  /**
   *
   * @type {Provider}
   * @memberof LinkedAccount
   */
  provider: Provider;
  /**
   *
   * @type {LinkedAccountStatus}
   * @memberof LinkedAccount
   */
  status?: LinkedAccountStatus;
  /**
   *
   * @type {object}
   * @memberof LinkedAccount
   */
  credentials?: object;
  /**
   *
   * @type {Date}
   * @memberof LinkedAccount
   */
  createdAt: Date;
  /**
   *
   * @type {Date}
   * @memberof LinkedAccount
   */
  updatedAt?: Date;
}

/**
 * Check if a given object implements the LinkedAccount interface.
 */
export function instanceOfLinkedAccount(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "userAccountId" in value;
  isInstance = isInstance && "accountName" in value;
  isInstance = isInstance && "accountColour" in value;
  isInstance = isInstance && "deleted" in value;
  isInstance = isInstance && "frozen" in value;
  isInstance = isInstance && "providerId" in value;
  isInstance = isInstance && "provider" in value;
  isInstance = isInstance && "createdAt" in value;

  return isInstance;
}

export function LinkedAccountFromJSON(json: any): LinkedAccount {
  return LinkedAccountFromJSONTyped(json, false);
}

export function LinkedAccountFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LinkedAccount {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    userAccountId: json["user_account_id"],
    accountName: json["account_name"],
    accountColour: json["account_colour"],
    deleted: json["deleted"],
    frozen: json["frozen"],
    providerId: json["provider_id"],
    provider: ProviderFromJSON(json["provider"]),
    status: !exists(json, "status")
      ? undefined
      : LinkedAccountStatusFromJSON(json["status"]),
    credentials: !exists(json, "credentials") ? undefined : json["credentials"],
    createdAt: new Date(json["created_at"]),
    updatedAt: !exists(json, "updated_at")
      ? undefined
      : new Date(json["updated_at"]),
  };
}

export function LinkedAccountToJSON(value?: LinkedAccount | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    user_account_id: value.userAccountId,
    account_name: value.accountName,
    account_colour: value.accountColour,
    deleted: value.deleted,
    frozen: value.frozen,
    provider_id: value.providerId,
    provider: ProviderToJSON(value.provider),
    status: LinkedAccountStatusToJSON(value.status),
    credentials: value.credentials,
    created_at: value.createdAt.toISOString(),
    updated_at:
      value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
  };
}
