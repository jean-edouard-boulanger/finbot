/* tslint:disable */
/* eslint-disable */
/**
 * Finbot application service
 * API documentation for appwsrv
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { UserAccount } from "./UserAccount";
import {
  UserAccountFromJSON,
  UserAccountFromJSONTyped,
  UserAccountToJSON,
  UserAccountToJSONTyped,
} from "./UserAccount";
import type { AuthenticationPayload } from "./AuthenticationPayload";
import {
  AuthenticationPayloadFromJSON,
  AuthenticationPayloadFromJSONTyped,
  AuthenticationPayloadToJSON,
  AuthenticationPayloadToJSONTyped,
} from "./AuthenticationPayload";

/**
 *
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
  /**
   *
   * @type {AuthenticationPayload}
   * @memberof LoginResponse
   */
  auth: AuthenticationPayload;
  /**
   *
   * @type {UserAccount}
   * @memberof LoginResponse
   */
  account: UserAccount;
}

/**
 * Check if a given object implements the LoginResponse interface.
 */
export function instanceOfLoginResponse(value: object): value is LoginResponse {
  if (!("auth" in value) || value["auth"] === undefined) return false;
  if (!("account" in value) || value["account"] === undefined) return false;
  return true;
}

export function LoginResponseFromJSON(json: any): LoginResponse {
  return LoginResponseFromJSONTyped(json, false);
}

export function LoginResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): LoginResponse {
  if (json == null) {
    return json;
  }
  return {
    auth: AuthenticationPayloadFromJSON(json["auth"]),
    account: UserAccountFromJSON(json["account"]),
  };
}

export function LoginResponseToJSON(json: any): LoginResponse {
  return LoginResponseToJSONTyped(json, false);
}

export function LoginResponseToJSONTyped(
  value?: LoginResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    auth: AuthenticationPayloadToJSON(value["auth"]),
    account: UserAccountToJSON(value["account"]),
  };
}
