/* tslint:disable */
/* eslint-disable */
/**
 * Finbot application service
 * API documentation for appwsrv
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { LinkedAccount } from "./LinkedAccount";
import {
  LinkedAccountFromJSON,
  LinkedAccountFromJSONTyped,
  LinkedAccountToJSON,
  LinkedAccountToJSONTyped,
} from "./LinkedAccount";

/**
 *
 * @export
 * @interface GetLinkedAccountsResponse
 */
export interface GetLinkedAccountsResponse {
  [key: string]: any | any;
  /**
   *
   * @type {Array<LinkedAccount>}
   * @memberof GetLinkedAccountsResponse
   */
  linkedAccounts: Array<LinkedAccount>;
}

/**
 * Check if a given object implements the GetLinkedAccountsResponse interface.
 */
export function instanceOfGetLinkedAccountsResponse(
  value: object,
): value is GetLinkedAccountsResponse {
  if (!("linkedAccounts" in value) || value["linkedAccounts"] === undefined)
    return false;
  return true;
}

export function GetLinkedAccountsResponseFromJSON(
  json: any,
): GetLinkedAccountsResponse {
  return GetLinkedAccountsResponseFromJSONTyped(json, false);
}

export function GetLinkedAccountsResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetLinkedAccountsResponse {
  if (json == null) {
    return json;
  }
  return {
    ...json,
    linkedAccounts: (json["linked_accounts"] as Array<any>).map(
      LinkedAccountFromJSON,
    ),
  };
}

export function GetLinkedAccountsResponseToJSON(
  json: any,
): GetLinkedAccountsResponse {
  return GetLinkedAccountsResponseToJSONTyped(json, false);
}

export function GetLinkedAccountsResponseToJSONTyped(
  value?: GetLinkedAccountsResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ...value,
    linked_accounts: (value["linkedAccounts"] as Array<any>).map(
      LinkedAccountToJSON,
    ),
  };
}
