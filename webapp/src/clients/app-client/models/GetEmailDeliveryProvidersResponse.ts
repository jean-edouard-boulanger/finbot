/* tslint:disable */
/* eslint-disable */
/**
 * Finbot application service
 * API documentation for appwsrv
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EmailProviderMetadata } from "./EmailProviderMetadata";
import {
  EmailProviderMetadataFromJSON,
  EmailProviderMetadataFromJSONTyped,
  EmailProviderMetadataToJSON,
  EmailProviderMetadataToJSONTyped,
} from "./EmailProviderMetadata";

/**
 *
 * @export
 * @interface GetEmailDeliveryProvidersResponse
 */
export interface GetEmailDeliveryProvidersResponse {
  [key: string]: any | any;
  /**
   *
   * @type {Array<EmailProviderMetadata>}
   * @memberof GetEmailDeliveryProvidersResponse
   */
  providers: Array<EmailProviderMetadata>;
}

/**
 * Check if a given object implements the GetEmailDeliveryProvidersResponse interface.
 */
export function instanceOfGetEmailDeliveryProvidersResponse(
  value: object,
): value is GetEmailDeliveryProvidersResponse {
  if (!("providers" in value) || value["providers"] === undefined) return false;
  return true;
}

export function GetEmailDeliveryProvidersResponseFromJSON(
  json: any,
): GetEmailDeliveryProvidersResponse {
  return GetEmailDeliveryProvidersResponseFromJSONTyped(json, false);
}

export function GetEmailDeliveryProvidersResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetEmailDeliveryProvidersResponse {
  if (json == null) {
    return json;
  }
  return {
    ...json,
    providers: (json["providers"] as Array<any>).map(
      EmailProviderMetadataFromJSON,
    ),
  };
}

export function GetEmailDeliveryProvidersResponseToJSON(
  json: any,
): GetEmailDeliveryProvidersResponse {
  return GetEmailDeliveryProvidersResponseToJSONTyped(json, false);
}

export function GetEmailDeliveryProvidersResponseToJSONTyped(
  value?: GetEmailDeliveryProvidersResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ...value,
    providers: (value["providers"] as Array<any>).map(
      EmailProviderMetadataToJSON,
    ),
  };
}
