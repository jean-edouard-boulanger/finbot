#!/usr/bin/env bash
OWN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source "${OWN_DIR}/bash-utils.sh"

wait_dep () {
  docker-compose run --rm operator env FINBOT_WAIT_DEPS="${1}" ./tools/finbot-wait
}

start_frontend=1
export FINBOT_ENV=production

usage () {
  echo
  echo "finbotctl start: start finbot"
  echo "  Arguments"
  echo "    --env          finbot environment (development / production)"
  echo "    --no-frontend  don't start the finbot GUI (backend only)"
}

while [[ $# -gt 0 ]]
do
  key="$1"
  case $key in
    --env)
      export FINBOT_ENV="$2"
      shift 2
    ;;
    --no-frontend)
      start_frontend=0
      shift
    ;;
    --help)
      usage
      exit 0
    ;;
    *)
      echo "unknown argument: ${key}"
      usage
      exit 1
    ;;
  esac
done

finbot_is_valid_env "${FINBOT_ENV}" || die "'${FINBOT_ENV}' is not a valid environment"

log_info "starting finbot (environment: ${FINBOT_ENV})"

if [[ "${start_frontend}" == "1" ]]
then
  log_info "starting finbot frontend container (webapp)"
  docker-compose up --no-deps -d webapp || die failed to start containers
fi

log_info "starting finbot database and message queue containers"
docker-compose up -d finbotdb finbotrmq || die failed to start containers
wait_dep finbotdb,finbotrmq

log_info "starting finbot application containers"
docker-compose up -d \
  workersrv \
  appwsrv \
  finbotwsrv \
  schedsrv \
  || die failed to start containers

log_info "waiting for finbot application containers"
wait_dep workersrv,appwsrv,finbotwsrv

if [[ "${start_frontend}" == "1" ]]
then
  log_info "waiting for frontend availability"
  wait_dep webapp
fi
