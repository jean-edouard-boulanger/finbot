#!/usr/bin/env bash
OWN_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. ${OWN_DIR}/bash-utils.sh

wait_dep () {
docker-compose run --rm operator \
  tools/with-env.sh docker \
    env FINBOT_WAIT_DEPS=${1} make finbot-wait >/dev/null 2>&1
}

start_frontend=1
export FINBOT_ENV=production

usage () {
  echo
  echo "finbotctl start: start finbot"
  echo "  Arguments"
  echo "    --env          finbot environment (development / production)"
  echo "    --no-frontend  don't start the finbot GUI (backend only)"
}

while [[ $# -gt 0 ]]
do
  key="$1"
  case $key in
    --env)
      export FINBOT_ENV="$2"
      shift 2
    ;;
    --no-frontend)
      start_frontend=0
      shift 2
    ;;
    --help)
      usage
      exit 0
    ;;
    *)
      echo "unknown argument: ${key}"
      usage
      exit 1
    ;;
  esac
done

log_info "starting finbot (environment: ${FINBOT_ENV})"

log_info "starting finbot backend containers"
docker-compose up -d \
  appwsrv histwsrv snapwsrv finbotwsrv finbotdb schedsrv \
  || die failed to start containers

log_info "waiting for finbot endpoints"
wait_dep api,hist,snap,finbot

if [[ "${start_frontend}" == "1" ]]
then
  log_info "starting finbot frontend container (webapp)"
  docker-compose up -d webapp || die failed to start containers
  log_info "waiting for frontend availability"
  wait_dep webapp

  webapp_url=$(tools/with-env.sh local tools/get-env.sh FINBOT_WEBAPP_ENDPOINT)
  log_info "you can now access finbot on: ${webapp_url}"
else
  log_info "skipping frontend container (--no-frontend provided)"
fi
