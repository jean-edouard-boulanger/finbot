#!/usr/bin/env python3
import json
from argparse import ArgumentParser

from finbot.core import environment, secure
from finbot.core.logging import configure_logging
from finbot.core.serialization import pretty_dump
from finbot.model import LinkedAccount, with_scoped_session, db


configure_logging()


def create_parser() -> ArgumentParser:
    parser = ArgumentParser(description="Dump linked account metadata")
    parser.add_argument("--id", type=int, required=True, help="Linked account id")
    parser.add_argument("--decrypt", action='store_true', default=False, help="Decrypt linked account secrets")
    return parser


@with_scoped_session
def main():
    settings = create_parser().parse_args()
    linked_account: LinkedAccount = db.session.query(LinkedAccount).filter_by(id=settings.id).one()
    print(pretty_dump({
        "id": linked_account.id,
        "user_account_id": linked_account.user_account_id,
        "provider_id": linked_account.provider_id,
        "account_name": linked_account.account_name,
        "credentials": (
            "<encrypted blob>" if not settings.decrypt else json.loads(secure.fernet_decrypt(
                linked_account.encrypted_credentials.encode(),
                environment.get_secret_key().encode()
            ).decode())
        ),
        "deleted": linked_account.deleted,
        "frozen": linked_account.frozen,
        "created_at": linked_account.created_at.isoformat(),
        "updated_at": linked_account.updated_at.isoformat() if linked_account.updated_at else None
    }, indent=2))


if __name__ == "__main__":
    main()